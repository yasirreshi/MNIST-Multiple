Calculating dataset statistics (mean and std)...

--- Calculated Dataset Statistics ---
Calculated Mean: 0.1307
Calculated Std: 0.3015
Used for Normalization: Mean=0.1307, Std=0.3081
The calculated values are very close to the standard ones, confirming our normalization is correct.
-------------------------------------

Intel XPU Available? True
CUDA Available? False

--- Data Statistics (First Batch) ---
Images tensor shape: torch.Size([128, 1, 28, 28])
Labels tensor shape: torch.Size([128])
 - min: -0.4242
 - max: 2.8215
 - mean: 0.0058
 - std: 1.0068
 - var: 1.0136
-------------------------------------

Saved a sample of the training data to analytics\pre_training\data_sample_v2.png

Using device: xpu
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 10, 28, 28]              90
       BatchNorm2d-2           [-1, 10, 28, 28]              20
              ReLU-3           [-1, 10, 28, 28]               0
           Dropout-4           [-1, 10, 28, 28]               0
            Conv2d-5           [-1, 14, 28, 28]           1,260
       BatchNorm2d-6           [-1, 14, 28, 28]              28
              ReLU-7           [-1, 14, 28, 28]               0
           Dropout-8           [-1, 14, 28, 28]               0
         MaxPool2d-9           [-1, 14, 14, 14]               0
           Conv2d-10           [-1, 16, 14, 14]           2,016
      BatchNorm2d-11           [-1, 16, 14, 14]              32
             ReLU-12           [-1, 16, 14, 14]               0
          Dropout-13           [-1, 16, 14, 14]               0
           Conv2d-14           [-1, 12, 14, 14]           1,728
      BatchNorm2d-15           [-1, 12, 14, 14]              24
             ReLU-16           [-1, 12, 14, 14]               0
          Dropout-17           [-1, 12, 14, 14]               0
        MaxPool2d-18             [-1, 12, 7, 7]               0
           Conv2d-19             [-1, 12, 7, 7]           1,296
      BatchNorm2d-20             [-1, 12, 7, 7]              24
             ReLU-21             [-1, 12, 7, 7]               0
          Dropout-22             [-1, 12, 7, 7]               0
           Conv2d-23             [-1, 10, 7, 7]           1,080
      BatchNorm2d-24             [-1, 10, 7, 7]              20
             ReLU-25             [-1, 10, 7, 7]               0
          Dropout-26             [-1, 10, 7, 7]               0
           Conv2d-27             [-1, 10, 7, 7]             100
        AvgPool2d-28             [-1, 10, 1, 1]               0
================================================================
Total params: 7,718
Trainable params: 7,718
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 0.80
Params size (MB): 0.03
Estimated Total Size (MB): 0.84
----------------------------------------------------------------
Saved model analysis to analytics\pre_training\model_analysis_v2.json
Model analysis saved: analytics\pre_training\model_analysis_v2.json
Saved model params CSV to analytics\pre_training\model_params_v2.csv
Saved model RF progression CSV to analytics\pre_training\model_rf_progression_v2.csv
Model analysis CSVs saved: {'params_csv': 'analytics\\pre_training\\model_params_v2.csv', 'rf_csv': 'analytics\\pre_training\\model_rf_progression_v2.csv'}

--- Hyperparameters & Run Config ---
run_timestamp: 2025-10-03T16:33:22.937578
model_source_file: D:\Educational\ERA_v4\Session6\Assignment\model_v2.py
model_suffix: _v2
total_trainable_params: 7718
optimizer:
  - type: SGD
  - lr: 0.05
  - momentum: 0.9
  - weight_decay: 0.0001
scheduler:
  - type: ReduceLROnPlateau
  - mode: min
  - factor: 0.1
  - patience: 2
  - threshold: 0.001
  - cooldown: 0
  - min_lr: 1e-05
epochs: 15
device: xpu
device_details:
  - xpu_available: True
  - cuda_available: False
  - xpu_name: Intel(R) Arc(TM) Graphics
  - cuda_name: None
  - ipex_enabled: False
batch_size: 128
num_workers: 2
pin_memory: True
train_dataset_size: 60000
test_dataset_size: 10000
train_transforms: Compose(
    RandomRotation(degrees=[-7.0, 7.0], interpolation=nearest, expand=False, fill=(1,))
    RandomAffine(degrees=[0.0, 0.0], translate=(0.1, 0.1))
    ToTensor()
    Normalize(mean=(0.1307,), std=(0.3081,))
)
test_transforms: Compose(
    ToTensor()
    Normalize(mean=(0.1307,), std=(0.3081,))
)
data_root: D:\Educational\ERA_v4\Session6\Assignment\data
analytics_root: D:\Educational\ERA_v4\Session6\Assignment\analytics
outputs_suffix: _v2
------------------------------------

Saved hyperparameters to analytics\pre_training\hparams_v2.json
EPOCH: 1 (Learning Rate: 0.050000)

Test set: Average loss: 0.1064, Accuracy: 9701/10000 (97.01%)

EPOCH: 2 (Learning Rate: 0.050000)

Test set: Average loss: 0.0946, Accuracy: 9729/10000 (97.29%)

EPOCH: 3 (Learning Rate: 0.050000)

Test set: Average loss: 0.1720, Accuracy: 9419/10000 (94.19%)

EPOCH: 4 (Learning Rate: 0.050000)

Test set: Average loss: 0.0525, Accuracy: 9838/10000 (98.38%)

EPOCH: 5 (Learning Rate: 0.050000)

Test set: Average loss: 0.0574, Accuracy: 9830/10000 (98.30%)

EPOCH: 6 (Learning Rate: 0.050000)

Test set: Average loss: 0.0707, Accuracy: 9769/10000 (97.69%)

EPOCH: 7 (Learning Rate: 0.025000)

Test set: Average loss: 0.0375, Accuracy: 9874/10000 (98.74%)

EPOCH: 8 (Learning Rate: 0.025000)

Test set: Average loss: 0.0306, Accuracy: 9903/10000 (99.03%)

EPOCH: 9 (Learning Rate: 0.025000)

Test set: Average loss: 0.0353, Accuracy: 9886/10000 (98.86%)

EPOCH: 10 (Learning Rate: 0.025000)

Test set: Average loss: 0.0317, Accuracy: 9905/10000 (99.05%)

EPOCH: 11 (Learning Rate: 0.012500)

Test set: Average loss: 0.0274, Accuracy: 9925/10000 (99.25%)

EPOCH: 12 (Learning Rate: 0.012500)

Test set: Average loss: 0.0343, Accuracy: 9893/10000 (98.93%)

EPOCH: 13 (Learning Rate: 0.012500)

Test set: Average loss: 0.0302, Accuracy: 9910/10000 (99.10%)

EPOCH: 14 (Learning Rate: 0.006250)

Test set: Average loss: 0.0298, Accuracy: 9905/10000 (99.05%)

EPOCH: 15 (Learning Rate: 0.006250)

Test set: Average loss: 0.0283, Accuracy: 9916/10000 (99.16%)


--- Training Complete ---
Generating performance plots...

Saved training performance graph to analytics\post_training\training_performance_v2.png
Saved zoomed training performance graph to analytics\post_training\training_performance_zoom_v2.png
Saved 10 misclassified images to analytics\post_training\misclassified_images_v2.png
Computing confusion matrix and per-class metrics...
Saved confusion matrix to analytics\post_training\confusion_matrix_v2.png
Saved per-class accuracy chart to analytics\post_training\per_class_accuracy_v2.png
Saved classification report to analytics\post_training\classification_report_v2.json
